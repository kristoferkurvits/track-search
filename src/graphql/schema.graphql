scalar Date
scalar JSON

schema {
  query: Query
  mutation: Mutation
}

interface BaseEntity {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
}

type Track implements BaseEntity {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  name: String!
  artistName: [String]!
  duration: Int!
  ISRC: String!
  releaseDate: Date
}

type Query {
  getTrackByNameAndArtist(name: String!, artistName:String!): [Track]
  getTrackById(id: ID!): Track
  getAllTracks: [Track]
}

type Mutation {
  issueToken: String!
  updateTrack(id: ID!, track: TrackInput): Track
  deleteTrack(id: ID!): ID
}

input TrackInput {
  name: String
  artistName: [String]
  duration: Int
  ISRC: String
  releaseDate: Date
}
